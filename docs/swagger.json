{
    "swagger": "2.0",
    "info": {
        "description": "API server for Proxy",
        "title": "API Proxy",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/",
    "paths": {
        "/api/v1/repeat/{id}": {
            "post": {
                "description": "Повторно отправляет запрос, сохраненный по его ID, и возвращает результат",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requests"
                ],
                "summary": "Repeat a request by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ParsedResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Request not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to repeat request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/requests": {
            "get": {
                "description": "Возвращает список всех запросов, сохраненных в базе данных",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requests"
                ],
                "summary": "Get all requests",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.RequestResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch requests",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/requests/{id}": {
            "get": {
                "description": "Возвращает конкретный запрос по его ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requests"
                ],
                "summary": "Get request by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RequestResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Request not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/scan/{id}": {
            "get": {
                "description": "Возвращает информацию о запросе по его ID, без его повторного выполнения",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "requests"
                ],
                "summary": "Scan request by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RequestResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Request not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ParsedRequest": {
            "type": "object",
            "properties": {
                "cookies": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "get_params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "method": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "post_params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "models.ParsedResponse": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.RequestResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "request": {
                    "$ref": "#/definitions/models.ParsedRequest"
                },
                "response": {
                    "$ref": "#/definitions/models.ParsedResponse"
                }
            }
        }
    }
}